const getRecipeByName = async (req, res) => {
  try {
    const { name } = req.query;

    // Busca 100 recetas en la API
    const { results } = await axios
      .get("https://apimocha.com/n.s.recipes/allrecipes")
      .then((receta) => receta.data);

    //Filtra las recetas a solo las que tengan el valor de la query "name" incluida en su titulo
    let recipesApi = !!name
      ? results.filter((recipe) =>
          recipe.title.toLowerCase().includes(name.toLowerCase())
        )
      : results;

    //Objeto de cada receta solo con las propiedades necesarias
    recipesApi = recipesApi.map((recipe) => reduceObjectsRecipes(recipe));

    let recipesDB = await Recipe.findAll({
      where: !!name
        ? {
            name: {
              [Op.substring]: name.toLowerCase(),
            },
          }
        : {},
      include: {
        model: Diet,
        as: "diets",
        attributes: ["name"],
        through: { attributes: [] },
      },
    });

    recipesDB = recipesDB.map((recipe) => modifyDietAttributes(recipe));

    const recipesAll = recipesApi.concat(recipesDB);

    return recipesAll.length ? res.json(recipesAll) : res.json([]);
  } catch (err) {
    return res.status(404).json(err);
  }
};

pokemondata = {
  id: 33,
  name: juan,
  img: null,
  hp: 33,
  attack: 44,
  defense: 55,
  speed: 22,
  height: 6,
  weight: 150,
};

{
    "id": 33,
    "name": "juan",
    "img": "null",
    "hp": 33,
    "attack": 44,
    "defense": 55,
    "speed": 22,
    "height": 6,
    "weight": 150
}

const getPokemonApiByNa = async (name) => {
  const { data } = await axios.get(`${URL}/${name}`);
  let pokemon = {
    id: data.id,
    name: data.name,
    img: data.sprites.other["official-artwork"].front_default,
    hp: data.stats[0].base_stat,
    attack: data.stats[1].base_stat,
    defense: data.stats[2].base_stat,
    speed: data.stats[5].base_stat,
    height: data.height,
    weight: data.weight,
  };
  return pokemon;
};

router.get("/pokemons/name", async (req, res) => {
  try {
    const { name } = req.query.toLowerCase();
    console.log(name);
    return res.status(200).json(await getPokemonApiByNa(name));
  } catch (error) {
    return res.status(404).json({ error: error.message });
  }
});